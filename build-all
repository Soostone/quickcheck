#!/bin/zsh

set -e

status() {
    echo $*
    echo $* >&2
}

last-word() {
    last=
    for i in $*; do
        last=$i
    done
    print $last
}

find-package() {
    last-word $(sed '/using$/{N;s/\n/ /}' $tmp|grep "using $1")
}

build-quickcheck() {
    kind=$1
    flags=$2

    status -n "$kind: "
    rm -rf dist

    if $runhaskell Setup.lhs configure -w $ghc $flags --user -v > $tmp; then
        grep 'Flags\|using' $tmp >&2
    else
        status 'Failed!'
        < $tmp >&2
        return
    fi

    if $runhaskell Setup.lhs build >&2; then
        status "OK, $(find-package base) $(find-package extensible-exceptions) $(find-package tf-random) $(find-package transformers)"
    else
        status 'Failed!'
    fi
    print >&2
}

exec 2>log
export tmp=$(mktemp)

if (( $# > 0 )); then
    ghcdirs=$*
else
    ghcdirs="/opt/ghc-*/bin /usr/bin"
fi

for ghcdir in ${~=ghcdirs}; do
    export ghc=$ghcdir/ghc
    version=$(last-word $($ghc --version))

    if [[ $version = 6.8.3 ]] || [[ $version = 6.10.4 ]]; then
        export runhaskell=/opt/ghc-6.12.3/bin/runhaskell
    else
        export runhaskell=$ghcdir/runhaskell
    fi

    status "==> GHC $version"
    cabal install -w $ghc --only-dependencies >& /dev/null || true
    build-quickcheck "No options"
    status
done
